---

- name: Install packages
  apt:
    name: "{{ item }}"
    state: present
  with_items: "{{ packages.dyndns }}"

- name: Check if the dyndns.php file already exists in the web hosting
  uri:
    url: "http://{{ dyndns.url }}/{{ dyndns.page }}"
  register: webpage_check
  ignore_errors: yes

- name: Transfer the dyndns.php file into the Raspberry Pi
  template:
    src: "{{ role_path }}/templates/dyndns.php.j2"
    dest: /tmp/{{ dyndns.page }}
  when: webpage_check.status == 404
  register: upload

- name: Upload the dyndns.php file to your web hosting using encrypted connection
  shell: >
    lftp -c 'set ftp:ssl-allow true; set ssl:verify-certificate no; set ftp:ssl-force yes;
    open -u {{ ftp.user }} --env-password -e "mput -O {{ ftp.path }} /tmp/{{ dyndns.page }};
    quit" {{ ftp.hostname }}:{{ ftp_port }}'
  when:  upload.changed == true and ftp_secure == true
  environment:
    LFTP_PASSWORD: "{{ ftp_pass }}"
  register: lftp_secure

- name: Upload the dyndns.php file to your web hosting using unencrypted connection (UNSECURE)
  shell: >
    lftp -c 'set ftp:ssl-allow true; set ssl:verify-certificate no;
    open -u {{ ftp.user }} --env-password -e "mput -O {{ ftp.path }} /tmp/{{ dyndns.page }};
    quit" {{ ftp.hostname }}:{{ ftp_port }}'
  when: upload.changed == true and ftp_secure == false
  environment:
    LFTP_PASSWORD: "{{ ftp_pass }}"
  register: lftp_unsecure

- name: Check if the PHP authentication is working
  uri:
    url: "http://{{ dyndns.url }}/{{ dyndns.page }}"
    user: "{{ dyndns.phpuser }}"
    password: "{{ dyndns_phppass}}"
    return_content: yes
    force_basic_auth: yes
  register: php_auth
  ignore_errors: yes
  when: lftp_secure|success or lftp_unsecure|success

- debug: msg="PHP authentication is working"
  when: php_auth|success
  changed_when: true

- debug: msg="PHP authentiation is NOT working"
  when: php_auth|failed

- name: GET .htaccess to update (SECURE)
  shell: >
    lftp -c 'set ftp:ssl-allow true; set ssl:verify-certificate no; set ftp:ssl-force yes;
    open -u {{ ftp.user }} --env-password -e "get {{ ftp.path }}/.htaccess -o /tmp/;
    quit" {{ ftp.hostname }}:{{ ftp_port }}'
  when: ftp_secure == true and php_auth|failed
  environment:
    LFTP_PASSWORD: "{{ ftp_pass }}"
  register: download_secure

- name: GET .htaccess to update (UNSECURE)
  shell: >
    lftp -c 'set ftp:ssl-allow true; set ssl:verify-certificate no;
    open -u {{ ftp.user }} --env-password -e "get {{ ftp.path }}/.htaccess -o /tmp/;
    quit" {{ ftp.hostname }}:{{ ftp_port }}'
  when: ftp_secure == false and php_auth|failed
  environment:
    LFTP_PASSWORD: "{{ ftp_pass }}"
  register: download_unsecure

- name: Update .htaccess with PHP authentication requirements
  blockinfile:
    dest: /tmp/.htaccess
    marker: "# {mark} Dynamic DNS"
    block: |
      RewriteEngine on
      RewriteCond %{HTTP:Authorization} ^(.*)
      RewriteRule ^(.*) - [E=HTTP_AUTHORIZATION:%1]
  when: php_auth|failed

- name: Replace .htaccess in web hosting (SECURE)
  shell: >
    lftp -c 'set ftp:ssl-allow true; set ssl:verify-certificate no; set ftp:ssl-force yes;
    open -u {{ ftp.user }} --env-password -e "mput -O {{ ftp.path }} /tmp/.htaccess;
    quit" {{ ftp.hostname }}:{{ ftp_port }}'
  when: ftp_secure == true and php_auth|failed
  environment:
    LFTP_PASSWORD: "{{ ftp_pass }}"

- name: Replace .htaccess in web hosting (UNSECURE)
  shell: >
    lftp -c 'set ftp:ssl-allow true; set ssl:verify-certificate no;
    open -u {{ ftp.user }} --env-password -e "mput -O {{ ftp.path }} /tmp/.htaccess;
    quit" {{ ftp.hostname }}:{{ ftp_port }}'
  when: ftp_secure == false and php_auth|failed
  environment:
    LFTP_PASSWORD: "{{ ftp_pass }}"

- name: Check if the PHP authentication is working
  uri:
    url: "http://{{ dyndns.url }}/{{ dyndns.page }}"
    user: "{{ dyndns.phpuser }}"
    password: "{{ dyndns_phppass}}"
    return_content: yes
  when: download_secure.changed == true or download_unsecure.changed == true
  register: php_auth

- debug: msg="PHP authentication is working NOW!!!"
  when: php_auth|success and (download_secure.changed == true or download_unsecure.changed == true)
  changed_when: true

- debug: msg="PHP authentiation is NOT working. Please, proceed manually to update the .htaccess file in your web hosting with the content in /tmp/.htaccess on your Raspberry Pi and re-run the playbook"
  when: php_auth|failed
  failed_when: php_auth|failed

- name: Clean /tmp
  file:
    path: "/tmp/{{ item }}"
    state: absent
  with_items:
    - .htaccess
    - dyndns.php
  when: php_auth|success and (download_secure.changed == true or download_unsecure.changed == true)
